[{"D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\index.js":"1","D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\App.js":"2","D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\reportWebVitals.js":"3","D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\pageInfoPokemon.js":"4","D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\darkMode.js":"5"},{"size":607,"mtime":1607462232334,"results":"6","hashOfConfig":"7"},{"size":5719,"mtime":1607462232264,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1607462232471,"results":"9","hashOfConfig":"7"},{"size":3327,"mtime":1607462232398,"results":"10","hashOfConfig":"7"},{"size":1150,"mtime":1607462232298,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1wldgfy",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"15"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\index.js",["27"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport pokemonInfo from './pageInfoPokemon'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// ReactDOM.render(\r\n//   <pokemonInfo />,\r\n//   document.getElementById('test')\r\n// )\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["28","29"],"D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\App.js",["30","31","32","33"],"import logo from './pokeball.svg';\r\nimport './App.css';\r\nimport './style.css'\r\nimport React from 'react';\r\nimport pokedex3d from './Pokedex3D.png'\r\nfunction incr(nb) {\r\n  let cpt=0\r\n  for (let i = 0; i < nb.length; i++) {\r\n    cpt++\r\n  }\r\n  return cpt\r\n}\r\n  class App extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     error: null,\r\n  //     isLoaded: false,\r\n  //     items: []\r\n  //   };\r\n  // }\r\n  \r\n  state={\r\n    get:{}\r\n  }\r\n  \r\n  componentDidMount() {\r\n    fetch(\"http://localhost:4242/pokemons\")\r\n      .then((res) => { \r\n        return res.json()\r\n      })\r\n      .then((result) => {\r\n          console.log(result)\r\n          this.setState({\r\n            // isLoaded: true,\r\n            get: result\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        // (error) => {\r\n        //   this.setState({\r\n        //     isLoaded: true,\r\n        //     errorD\r\n        //   });\r\n        // }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    // const { error, isLoaded, items } = this.state;\r\n    // if (error) {\r\n    //   return <div>Error: {error.message}</div>;\r\n    // } else if (!isLoaded) {\r\n    //   return (\r\n    //     <div className=\"App\">\r\n    //       <header className=\"App-header\">\r\n    //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    //         <p>\r\n    //           Welcome to our API Pokedex.\r\n    //         </p><br/>\r\n    //         <p></p>\r\n    //       </header>\r\n    //     </div>\r\n    //   )\r\n    // } else {\r\n      \r\n        return (\r\n            <div>\r\n              <img src={ pokedex3d }/>\r\n              <div class=\"container\">                     \r\n                <div class=\"card\" >\r\n                {/* pb avec la recup des infos avec le this.state.get */}\r\n                  <img src ={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${this.state.get.numéro}.png`}/>\r\n                  <h1>#{this.state.get.numéro}</h1>\r\n                  <p>{this.state.get.nom}</p>\r\n                </div>\r\n              </div>\r\n              </div>\r\n          \r\n              \r\n              \r\n        )\r\n    }\r\n  // }\r\n}\r\n\r\nexport default App;\r\n","D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\reportWebVitals.js",[],"D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\pageInfoPokemon.js",["34","35","36","37"],"import './style.css'\r\nimport './styleDark.css'\r\nimport React from 'react'\r\n\r\nclass pokemonInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // error: null,\r\n      // isLoaded: false,\r\n      // items: []\r\n      get: []\r\n    };\r\n  }\r\n  getDataOnePokemons(){\r\n    fetch(\"http://localhost:4242/pokemons/\").then(res => { \r\n     res.json()\r\n    .then(data => {\r\n        console.log(data)\r\n        this.setState({\r\n          // isLoaded: true,\r\n          get: data\r\n          \r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataOnePokemons()\r\n  }\r\n    \r\n      render() {\r\n        // const { error, isLoaded, items } = this.state;\r\n        // if (error) {\r\n        //   return <div>Error: {error.message}</div>;\r\n        // } else if (!isLoaded) {\r\n        //   return <div>Loading...</div>;\r\n        // } else {\r\n          const infoPokemon=this.state.get.map((d)=>{\r\n            // console.log(`Data nom --> ${d.nom}`)\r\n            // console.log(`Data nom --> ${d.numéro}`)\r\n            return(\r\n            <div>\r\n              <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${d.numéro}.png`} class=\"pokemonInfo-imgPokemon\" alt=\"image du pokemon\" />\r\n              <h2>Identité</h2>\r\n              <table style=\"width:50%\">\r\n              <tr>\r\n                  <td>Couleur</td>\r\n                  <td>Espece</td> \r\n                  <td>Type1</td>\r\n                  <td>Taille</td>\r\n                  <td>Poids</td>\r\n                  <td>Forme</td>\r\n              </tr>\r\n              <tr>\r\n                  <td>{d.couleur}</td>\r\n                  <td>{d.espece}</td>\r\n                  <td>{d.type1}</td>\r\n                  <td>{d.taille}</td>\r\n                  <td>{d.poids}</td>\r\n                  <td>{d.forme}</td>\r\n              </tr>\r\n              </table>\r\n                  <table style=\"width:50%\">\r\n                  <tr>\r\n                    <td>Pokemon</td>\r\n                    <td>Nom FR</td> \r\n                    <td>Nom EN</td>\r\n                    <td>Nom DE</td>\r\n                    <td>Nom TM</td>\r\n                    <td>Nom JA</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{d.pokemon}</td>\r\n                    <td>{d.nom}</td>\r\n                    <td>{d.nomen}</td>\r\n                    <td>{d.nomde}</td>\r\n                    <td>{d.nomtm}</td>\r\n                    <td>{d.nomja}</td>\r\n                  </tr>\r\n                  </table>\r\n                  <h2>Attaques</h2>\r\n                  <table style=\"width:100%\">\r\n                  <tr>\r\n                    <td>Niveau</td>\r\n                    <td>Nom</td> \r\n                    <td>Puissance</td>\r\n                    <td>Precision</td>\r\n                    <td>PP</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{d.niveau}</td>\r\n                    <td>{d.nom}</td>\r\n                    <td>{d.puissance}</td>\r\n                    <td>{d.precision}</td>\r\n                    <td>{d.pp}</td>\r\n                  </tr>\r\n                  </table>\r\n              </div>\r\n            )\r\n          })\r\n          return (\r\n              <div class=\"pokemonInfo\">\r\n              {infoPokemon}\r\n              </div>\r\n          )\r\n        }\r\n}\r\n\r\nexport default pokemonInfo\r\n\r\n","D:\\EFREI_COURS\\PROJET\\cx-react-pokemon\\client\\pokedex\\src\\darkMode.js",["38"],"import React from \"react\"\r\nimport \"./styleDark.css\"\r\n\r\nconst DarkMode= ()=>{\r\n    let clickedClass = \"clicked\"\r\n    const body = document.body\r\n    const lightTheme = \"light\"\r\n    const darkTheme = \"dark\"\r\n    let theme\r\n\r\n    if (localStorage) {\r\n        theme = localStorage.getItem(\"theme\")\r\n    }\r\n\r\n    if (theme === lightTheme || theme == darkTheme) {\r\n        body.classList.add(theme)\r\n    }else{\r\n        body.classList.add(lightTheme)\r\n    }\r\n\r\n    const switchTheme = (e) => {\r\n        if(theme === darkTheme){\r\n            body.classList.replace(darkTheme,lightTheme)\r\n            e.target.classList.remove(clickedClass)\r\n            localStorage.setItem(\"theme\",\"light\")\r\n            theme = lightTheme\r\n        }else{\r\n            body.classList.replace(lightTheme,darkTheme)\r\n            e.target.classList.add(clickedClass)\r\n            localStorage.setItem(\"theme\",\"dark\")\r\n            theme = darkTheme\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className={theme === \"dark\" ? clickedClass : \"\"}\r\n        id=\"darkMode\"\r\n        onClick={(e) => switchTheme(e)}\r\n        ></button>\r\n    )\r\n}\r\n\r\nexport default DarkMode",{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":19},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"47","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"48","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":71,"column":15,"nodeType":"51","endLine":71,"endColumn":39},{"ruleId":"49","severity":1,"message":"50","line":75,"column":19,"nodeType":"51","endLine":75,"endColumn":121},{"ruleId":"52","severity":1,"message":"53","line":45,"column":15,"nodeType":"51","endLine":45,"endColumn":158},{"ruleId":"54","severity":1,"message":"55","line":47,"column":22,"nodeType":"56","endLine":47,"endColumn":39},{"ruleId":"54","severity":1,"message":"55","line":65,"column":26,"nodeType":"56","endLine":65,"endColumn":43},{"ruleId":"54","severity":1,"message":"55","line":84,"column":26,"nodeType":"56","endLine":84,"endColumn":44},{"ruleId":"57","severity":1,"message":"58","line":15,"column":39,"nodeType":"59","messageId":"60","endLine":15,"endColumn":41},"no-unused-vars","'pokemonInfo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'logo' is defined but never used.","'incr' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/style-prop-object","Style prop value must be an object","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]