[{"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\index.js":"1","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\App.js":"2","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\reportWebVitals.js":"3","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\scripts.js":"4","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\pageInfoPokemon.js":"5","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\darkMode.js":"6"},{"size":607,"mtime":1607440225168,"results":"7","hashOfConfig":"8"},{"size":5815,"mtime":1607466639277,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1607294608278,"results":"10","hashOfConfig":"8"},{"size":1484,"mtime":1607285633420,"results":"11","hashOfConfig":"8"},{"size":3327,"mtime":1607445560932,"results":"12","hashOfConfig":"8"},{"size":1150,"mtime":1607454548821,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"guk9gd",{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\index.js",["30"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport pokemonInfo from './pageInfoPokemon'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// ReactDOM.render(\r\n//   <pokemonInfo />,\r\n//   document.getElementById('test')\r\n// )\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["31","32"],"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\App.js",["33","34","35","36","37","38","39","40"],"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\reportWebVitals.js",[],"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\scripts.js",[],"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\pageInfoPokemon.js",["41","42","43","44"],"import './style.css'\r\nimport './styleDark.css'\r\nimport React from 'react'\r\n\r\nclass pokemonInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // error: null,\r\n      // isLoaded: false,\r\n      // items: []\r\n      get: []\r\n    };\r\n  }\r\n  getDataOnePokemons(){\r\n    fetch(\"http://localhost:4242/pokemons/:id\").then(res => { \r\n     res.json()\r\n    .then(data => {\r\n        console.log(data)\r\n        this.setState({\r\n          // isLoaded: true,\r\n          get: data\r\n          \r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataOnePokemons()\r\n  }\r\n    \r\n      render() {\r\n        // const { error, isLoaded, items } = this.state;\r\n        // if (error) {\r\n        //   return <div>Error: {error.message}</div>;\r\n        // } else if (!isLoaded) {\r\n        //   return <div>Loading...</div>;\r\n        // } else {\r\n          const infoPokemon=this.state.get.map((d)=>{\r\n            // console.log(`Data nom --> ${d.nom}`)\r\n            // console.log(`Data nom --> ${d.numéro}`)\r\n            return(\r\n            <div>\r\n              <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${d.numéro}.png`} class=\"pokemonInfo-imgPokemon\" alt=\"image du pokemon\" />\r\n              <h2>Identité</h2>\r\n              <table style=\"width:50%\">\r\n              <tr>\r\n                  <td>Couleur</td>\r\n                  <td>Espece</td> \r\n                  <td>Type1</td>\r\n                  <td>Taille</td>\r\n                  <td>Poids</td>\r\n                  <td>Forme</td>\r\n              </tr>\r\n              <tr>\r\n                  <td>{d.couleur}</td>\r\n                  <td>{d.espece}</td>\r\n                  <td>{d.type1}</td>\r\n                  <td>{d.taille}</td>\r\n                  <td>{d.poids}</td>\r\n                  <td>{d.forme}</td>\r\n              </tr>\r\n              </table>\r\n                  <table style=\"width:50%\">\r\n                  <tr>\r\n                    <td>Pokemon</td>\r\n                    <td>Nom FR</td> \r\n                    <td>Nom EN</td>\r\n                    <td>Nom DE</td>\r\n                    <td>Nom TM</td>\r\n                    <td>Nom JA</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{d.pokemon}</td>\r\n                    <td>{d.nom}</td>\r\n                    <td>{d.nomen}</td>\r\n                    <td>{d.nomde}</td>\r\n                    <td>{d.nomtm}</td>\r\n                    <td>{d.nomja}</td>\r\n                  </tr>\r\n                  </table>\r\n                  <h2>Attaques</h2>\r\n                  <table style=\"width:100%\">\r\n                  <tr>\r\n                    <td>Niveau</td>\r\n                    <td>Nom</td> \r\n                    <td>Puissance</td>\r\n                    <td>Precision</td>\r\n                    <td>PP</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{d.niveau}</td>\r\n                    <td>{d.nom}</td>\r\n                    <td>{d.puissance}</td>\r\n                    <td>{d.precision}</td>\r\n                    <td>{d.pp}</td>\r\n                  </tr>\r\n                  </table>\r\n              </div>\r\n            )\r\n          })\r\n          return (\r\n              <div class=\"pokemonInfo\">\r\n              {infoPokemon}\r\n              </div>\r\n          )\r\n        }\r\n}\r\n\r\nexport default pokemonInfo\r\n\r\n","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\darkMode.js",["45"],"import React from \"react\"\r\nimport \"./styleDark.css\"\r\n\r\nconst DarkMode= ()=>{\r\n    let clickedClass = \"clicked\"\r\n    const body = document.body\r\n    const lightTheme = \"light\"\r\n    const darkTheme = \"dark\"\r\n    let theme\r\n\r\n    if (localStorage) {\r\n        theme = localStorage.getItem(\"theme\")\r\n    }\r\n\r\n    if (theme === lightTheme || theme == darkTheme) {\r\n        body.classList.add(theme)\r\n    }else{\r\n        body.classList.add(lightTheme)\r\n    }\r\n\r\n    const switchTheme = (e) => {\r\n        if(theme === darkTheme){\r\n            body.classList.replace(darkTheme,lightTheme)\r\n            e.target.classList.remove(clickedClass)\r\n            localStorage.setItem(\"theme\",\"light\")\r\n            theme = lightTheme\r\n        }else{\r\n            body.classList.replace(lightTheme,darkTheme)\r\n            e.target.classList.add(clickedClass)\r\n            localStorage.setItem(\"theme\",\"dark\")\r\n            theme = darkTheme\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className={theme === \"dark\" ? clickedClass : \"\"}\r\n        id=\"darkMode\"\r\n        onClick={(e) => switchTheme(e)}\r\n        ></button>\r\n    )\r\n}\r\n\r\nexport default DarkMode",{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":19},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":7,"column":5,"nodeType":"48","messageId":"49","endLine":7,"endColumn":8},{"ruleId":"46","severity":1,"message":"55","line":104,"column":13,"nodeType":"48","messageId":"49","endLine":104,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":109,"column":11,"nodeType":"58","endLine":109,"endColumn":154},{"ruleId":"59","severity":1,"message":"60","line":111,"column":18,"nodeType":"61","endLine":111,"endColumn":35},{"ruleId":"59","severity":1,"message":"60","line":129,"column":22,"nodeType":"61","endLine":129,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":148,"column":22,"nodeType":"61","endLine":148,"endColumn":40},{"ruleId":"62","severity":1,"message":"63","line":175,"column":11,"nodeType":"58","endLine":175,"endColumn":100},{"ruleId":"62","severity":1,"message":"63","line":188,"column":9,"nodeType":"58","endLine":188,"endColumn":33},{"ruleId":"56","severity":1,"message":"57","line":45,"column":15,"nodeType":"58","endLine":45,"endColumn":158},{"ruleId":"59","severity":1,"message":"60","line":47,"column":22,"nodeType":"61","endLine":47,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":65,"column":26,"nodeType":"61","endLine":65,"endColumn":43},{"ruleId":"59","severity":1,"message":"60","line":84,"column":26,"nodeType":"61","endLine":84,"endColumn":44},{"ruleId":"64","severity":1,"message":"65","line":15,"column":39,"nodeType":"66","messageId":"67","endLine":15,"endColumn":41},"no-unused-vars","'pokemonInfo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'idP' is defined but never used.","'infoPokemon' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/style-prop-object","Style prop value must be an object","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]