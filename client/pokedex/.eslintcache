[{"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\index.js":"1","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\App.js":"2","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\reportWebVitals.js":"3","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\scripts.js":"4","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\pageInfoPokemon.js":"5","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\darkMode.js":"6"},{"size":607,"mtime":1607440225168,"results":"7","hashOfConfig":"8"},{"size":5719,"mtime":1607459716621,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1607294608278,"results":"10","hashOfConfig":"8"},{"size":1484,"mtime":1607285633420,"results":"11","hashOfConfig":"8"},{"size":3327,"mtime":1607445560932,"results":"12","hashOfConfig":"8"},{"size":1150,"mtime":1607454548821,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"guk9gd",{"filePath":"16","messages":"17","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\index.js",["28"],"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\App.js",["29","30","31","32","33","34","35"],"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\reportWebVitals.js",[],["36","37"],"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\scripts.js",[],"P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\pageInfoPokemon.js",["38","39","40","41"],"import './style.css'\r\nimport './styleDark.css'\r\nimport React from 'react'\r\n\r\nclass pokemonInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // error: null,\r\n      // isLoaded: false,\r\n      // items: []\r\n      get: []\r\n    };\r\n  }\r\n  getDataOnePokemons(){\r\n    fetch(\"http://localhost:4242/pokemons/:id\").then(res => { \r\n     res.json()\r\n    .then(data => {\r\n        console.log(data)\r\n        this.setState({\r\n          // isLoaded: true,\r\n          get: data\r\n          \r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataOnePokemons()\r\n  }\r\n    \r\n      render() {\r\n        // const { error, isLoaded, items } = this.state;\r\n        // if (error) {\r\n        //   return <div>Error: {error.message}</div>;\r\n        // } else if (!isLoaded) {\r\n        //   return <div>Loading...</div>;\r\n        // } else {\r\n          const infoPokemon=this.state.get.map((d)=>{\r\n            // console.log(`Data nom --> ${d.nom}`)\r\n            // console.log(`Data nom --> ${d.numéro}`)\r\n            return(\r\n            <div>\r\n              <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${d.numéro}.png`} class=\"pokemonInfo-imgPokemon\" alt=\"image du pokemon\" />\r\n              <h2>Identité</h2>\r\n              <table style=\"width:50%\">\r\n              <tr>\r\n                  <td>Couleur</td>\r\n                  <td>Espece</td> \r\n                  <td>Type1</td>\r\n                  <td>Taille</td>\r\n                  <td>Poids</td>\r\n                  <td>Forme</td>\r\n              </tr>\r\n              <tr>\r\n                  <td>{d.couleur}</td>\r\n                  <td>{d.espece}</td>\r\n                  <td>{d.type1}</td>\r\n                  <td>{d.taille}</td>\r\n                  <td>{d.poids}</td>\r\n                  <td>{d.forme}</td>\r\n              </tr>\r\n              </table>\r\n                  <table style=\"width:50%\">\r\n                  <tr>\r\n                    <td>Pokemon</td>\r\n                    <td>Nom FR</td> \r\n                    <td>Nom EN</td>\r\n                    <td>Nom DE</td>\r\n                    <td>Nom TM</td>\r\n                    <td>Nom JA</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{d.pokemon}</td>\r\n                    <td>{d.nom}</td>\r\n                    <td>{d.nomen}</td>\r\n                    <td>{d.nomde}</td>\r\n                    <td>{d.nomtm}</td>\r\n                    <td>{d.nomja}</td>\r\n                  </tr>\r\n                  </table>\r\n                  <h2>Attaques</h2>\r\n                  <table style=\"width:100%\">\r\n                  <tr>\r\n                    <td>Niveau</td>\r\n                    <td>Nom</td> \r\n                    <td>Puissance</td>\r\n                    <td>Precision</td>\r\n                    <td>PP</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{d.niveau}</td>\r\n                    <td>{d.nom}</td>\r\n                    <td>{d.puissance}</td>\r\n                    <td>{d.precision}</td>\r\n                    <td>{d.pp}</td>\r\n                  </tr>\r\n                  </table>\r\n              </div>\r\n            )\r\n          })\r\n          return (\r\n              <div class=\"pokemonInfo\">\r\n              {infoPokemon}\r\n              </div>\r\n          )\r\n        }\r\n}\r\n\r\nexport default pokemonInfo\r\n\r\n","P:\\PAD\\Travail\\mesProjetsGit\\cx-react-pokemon\\client\\pokedex\\src\\darkMode.js",["42"],{"ruleId":"43","severity":1,"message":"44","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":109,"column":9,"nodeType":"49","endLine":109,"endColumn":98},{"ruleId":"43","severity":1,"message":"50","line":117,"column":13,"nodeType":"45","messageId":"46","endLine":117,"endColumn":24},{"ruleId":"51","severity":1,"message":"52","line":122,"column":11,"nodeType":"49","endLine":122,"endColumn":154},{"ruleId":"53","severity":1,"message":"54","line":124,"column":18,"nodeType":"55","endLine":124,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":142,"column":22,"nodeType":"55","endLine":142,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":161,"column":22,"nodeType":"55","endLine":161,"endColumn":40},{"ruleId":"47","severity":1,"message":"48","line":184,"column":9,"nodeType":"49","endLine":184,"endColumn":33},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"51","severity":1,"message":"52","line":45,"column":15,"nodeType":"49","endLine":45,"endColumn":158},{"ruleId":"53","severity":1,"message":"54","line":47,"column":22,"nodeType":"55","endLine":47,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":65,"column":26,"nodeType":"55","endLine":65,"endColumn":43},{"ruleId":"53","severity":1,"message":"54","line":84,"column":26,"nodeType":"55","endLine":84,"endColumn":44},{"ruleId":"60","severity":1,"message":"61","line":15,"column":39,"nodeType":"62","messageId":"63","endLine":15,"endColumn":41},"no-unused-vars","'pokemonInfo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'infoPokemon' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/style-prop-object","Style prop value must be an object","JSXAttribute","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]